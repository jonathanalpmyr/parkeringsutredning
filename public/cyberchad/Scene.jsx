/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf --draco --simplify --resolution --format 
Author: FunkyzeitGames (https://sketchfab.com/funkyzeit987)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cyberchad-617e35ba54b84b0d91275f99231748ad
Title: CyberChad
*/

import React from "react"
import { useGraph } from "@react-three/fiber"
import { useGLTF } from "@react-three/drei"
import { SkeletonUtils } from "three-stdlib"

export function CyberChad(props) {
  const { scene } = useGLTF("/cyberchad/scene.gltf")
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <primitive object={nodes._rootJoint} />
        <skinnedMesh
          geometry={nodes.Object_59.geometry}
          material={materials.Body_Low_SP_blinn1SG1}
          skeleton={nodes.Object_59.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Object_61.geometry}
          material={materials.material}
          skeleton={nodes.Object_61.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Object_62.geometry}
          material={materials.Eye_TransP}
          skeleton={nodes.Object_62.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Object_64.geometry}
          material={materials.material}
          skeleton={nodes.Object_64.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Object_65.geometry}
          material={materials.Eye_TransP}
          skeleton={nodes.Object_65.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload("/cyberchad/scene.gltf")
